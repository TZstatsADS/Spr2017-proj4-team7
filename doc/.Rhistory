cos.sim <- function(ix)
{
A = dtm_train_tfidf[ix[1],]
B = dtm_train_tfidf[ix[2],]
return( sum(A*B)/sqrt(sum(A^2)*sum(B^2)) )
}
n <- nrow(dtm_train)
cmb <- expand.grid(i=1:n, j=1:n)
docsdissim <- as.dist(matrix(apply(cmb,1,cos.sim),n,n))
h <- hclust(docsdissim, method = "ward.D")
plot(h, labels = c(1:n), sub = "")
result_hclust <- cutree(h,length(unique(AKumar$AuthorID)))
table(result_hclust)
source('~/Dropbox/Project4_WhoIsWho/lib/evaluation_measures.R')
matching_matrix_hclust <- matching_matrix(AKumar$AuthorID,result_hclust)
performance_hclust <- performance_statistics(matching_matrix_hclust)
performance_hclust
View(AKumar)
my.data
data(UScitiesD)
mds2 <- -cmdscale(UScitiesD)
plot(mds2, type="n", axes=FALSE, ann=FALSE)
text(mds2, labels=rownames(mds2), xpd = NA)
UScitiesD
hcity.D  <- hclust(UScitiesD, "ward.D") # "wrong"
hcity.D2 <- hclust(UScitiesD, "ward.D2")
opar <- par(mfrow = c(1, 2))
plot(hcity.D,  hang=-1)
plot(hcity.D2, hang=-1)
require(graphics)
USArrests
dist(USArrests)
dist(USArrests)[1,1]
class(dist(USArrests))
?dist
as.matrix(dist(USArrests))[1,2]
USArrests[1,]
USArrests[2,]
dist(USArrests[1,],USArrests[2,])
USArrests[1,]%*%USArrests[2,]
t(USArrests[1,])%*%USArrests[2,]
t(as.vector(USArrests[1,]))%*%as.vector(USArrests[2,])
class(USArrests[2,])
as.vector(USArrests[2,])
USArrests[1,]
10*13.2+263*236+48*58+44.5*21.2
sqrt(65927.4)
as.matrix(dist(USArrests))[1,1]
3.2^2+27^2+100+(44.5-21.2)^2
sqrt(1382.13)
pacman::p_load(text2vec, dplyr, qlcMatrix)
dim(cosSparse(dtm_train_tfidf))
n
dim(dtm_train_tfidf)
class(dtm_train_tfidf)
dim(cosSparse(t(dtm_train_tfidf)))
nrow(dtm_train_tfidf)
docsdissim <- cosSparse(t(dtm_train_tfidf))
rownames(docsdissim) <- c(1:nrow(dtm_train_tfidf))
colnames(docsdissim) <- c(1:nrow(dtm_train_tfidf))
#compute pairwise cosine similarities between citations, using cosSparse function in package
h <- hclust(as.dist(docsdissim), method = "ward")
h <- hclust(as.dist(docsdissim), method = "ward.D")
result_hclust <- cutree(h,length(unique(AKumar$AuthorID)))
table(result_hclust)
matching_matrix_hclust <- matching_matrix(AKumar$AuthorID,result_hclust)
performance_hclust <- performance_statistics(matching_matrix_hclust)
performance_hclust
result_hclust <- specc(dtm_train_tfidf, centers=length(unique(AKumar$AuthorID)))
pacman::p_load(text2vec, dplyr, qlcMatrix, kernlab)
result_hclust <- specc(dtm_train_tfidf, centers=length(unique(AKumar$AuthorID)))
result_hclust <- specc(as.matrix(dtm_train_tfidf), centers=length(unique(AKumar$AuthorID)))
```
result_hclust <- specc(as.matrix(dtm_train_tfidf), centers=length(unique(AKumar$AuthorID)))
result_sclust <- specc(as.matrix(dtm_train_tfidf), centers=length(unique(AKumar$AuthorID)))
table(result_sclust)
matching_matrix_sclust <- matching_matrix(AKumar$AuthorID,result_sclust)
performance_sclust <- performance_statistics(matching_matrix_sclust)
performance_sclust
performance_hclust
?table
start.time <- Sys.time()
result_sclust <- specc(as.matrix(dtm_train_tfidf), centers=length(unique(AKumar$AuthorID)))
end.time <- Sys.time()
time_sclust <- end.time - start.time
time_sclust
start.time <- Sys.time()
docsdissim <- cosSparse(t(dtm_train_tfidf))
rownames(docsdissim) <- c(1:nrow(dtm_train_tfidf))
colnames(docsdissim) <- c(1:nrow(dtm_train_tfidf))
#compute pairwise cosine similarities between citations, using cosSparse function in package
h <- hclust(as.dist(docsdissim), method = "ward.D")
result_hclust <- cutree(h,length(unique(AKumar$AuthorID)))
end.time <- Sys.time()
time_hclust <- end.time - start.time
time_hclust
performance_sclust
source('~/Dropbox/Project4_WhoIsWho/lib/evaluation_measures.R')
matching_matrix_hclust <- matching_matrix(AKumar$AuthorID,result_hclust)
performance_hclust <- performance_statistics(matching_matrix_hclust)
matching_matrix_sclust <- matching_matrix(AKumar$AuthorID,result_sclust)
performance_sclust <- performance_statistics(matching_matrix_sclust)
compare_df <- data.frame(method=c(sClust,hClust),
precision=c(performance_sclust$precision, performance_hclust$precision),
recall=c(performance_sclust$recall, performance_hclust$recall),
f1=c(performance_sclust$f1, performance_hclust$f1),
accuracy=c(performance_sclust$accuracy, performance_hclust$accuracy),
time=c(time_sclust,time_hclust))
kable(compare_df,caption="Comparision of performance for two clustering methods",digits = 2)
pacman::p_load(text2vec, dplyr, qlcMatrix, kernlab, knitr)
matching_matrix_hclust <- matching_matrix(AKumar$AuthorID,result_hclust)
performance_hclust <- performance_statistics(matching_matrix_hclust)
matching_matrix_sclust <- matching_matrix(AKumar$AuthorID,result_sclust)
performance_sclust <- performance_statistics(matching_matrix_sclust)
compare_df <- data.frame(method=c("sClust","hClust"),
precision=c(performance_sclust$precision, performance_hclust$precision),
recall=c(performance_sclust$recall, performance_hclust$recall),
f1=c(performance_sclust$f1, performance_hclust$f1),
accuracy=c(performance_sclust$accuracy, performance_hclust$accuracy),
time=c(time_sclust,time_hclust))
kable(compare_df,caption="Comparision of performance for two clustering methods",digits = 2)
end.time - start.time
?sub
knitr::opts_chunk$set(echo = TRUE)
packages.used=c("stringr", "tex2vec")
# Check packages that need to be installed.
packages.needed=setdiff(packages.used, intersect(installed.packages()[,1],
packages.used))
# Install packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
# Load packages
library(stringr)
library(text2vec)
packages<-c("stringr", "tex2vec")
packages.needed=setdiff(packages.used, intersect(installed.packages()[,1],
packages))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
library(stringr)
library(text2vec)
install.packages("tex2vec")
packages<-c("stringr", "text2vec")
packages.needed<-setdiff(packages.used, intersect(installed.packages()[,1],
packages))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
library(stringr)
library(text2vec)
install.packages("text2vec")
library(text2vec)
names<-list.files(path = "../data/nameset", pattern = "*.txt")
names<-substr(names,1,nchar(names)-4)
mylist<-list()
for (i in names){
l1 <- data.frame(scan(paste0("../data/nameset/",i,".txt"),
what = list(Coauthor = "", Paper = "", Journal = ""),
sep=">",quote = NULL, quiet=TRUE),stringsAsFactors=FALSE)
}
names
names<-substr(names,1,nchar(names)-4)
names
names<-list.files(path = "../data/nameset", pattern = "*.txt")
mylist<-list()
for (i in names){
l1 <- data.frame(scan(paste0("../data/nameset/",i,".txt"),
what = list(Coauthor = "", Paper = "", Journal = ""),
sep=">",quote = NULL, quiet=TRUE),stringsAsFactors=FALSE)
}
getwd()
i
names<-list.files(path = "../data/nameset", pattern = "*.txt")
names
names<-substr(names,1,nchar(names)-4)
names
for (i in names){
l1 <- data.frame(scan(paste0("../data/nameset/",i,".txt"),
what = list(Coauthor = "", Paper = "", Journal = ""),
sep=">",quote = NULL, quiet=TRUE),stringsAsFactors=FALSE)
}
i
names<-list.files(path = "../data/nameset", pattern = "*.txt")
names
for (i in names){
l1 <- data.frame(scan(paste0("../data/nameset/",i),
what = list(Coauthor = "", Paper = "", Journal = ""),
sep=">",quote = NULL, quiet=TRUE),stringsAsFactors=FALSE)
}
l1
View(l1)
?scan
names <- substr(names, 1, nchar(names)-4)
names
authors <- paste(substring(files, 1, 1), " ",
substring(files, 2, nchar(files)), sep="")
authors <- paste(substring(names, 1, 1), " ",
substring(names, 2, nchar(names)), sep="")
dataset <- list(length(names))
for(i in 1:length(names)){
temp <- as.list(readLines(paste0("../data/nameset/", names[i],".txt")))
dataset[[i]] <- lapply(temp, clean.record, author=authors[i])
}
for(i in 1:length(names)){
temp <- as.list(readLines(paste0("../data/nameset/", names[i],".txt")))
dataset[[i]] <- lapply(temp, author=authors[i])
}
i
temp <- as.list(readLines(paste0("../data/nameset/", names[i],".txt")))
for(i in 1:length(names)){
dataset[i] <- as.list(readLines(paste0("../data/nameset/", names[i],".txt")))
}
dataset <- list(length(names))
for(i in 1:length(names)){
dataset[i] <- readLines(paste0("../data/nameset/", names[i],".txt"))
}
data[1]
dataset[1]
View(dataset[[1]])
dataset[[i]] <- readLines(paste0("../data/nameset/", names[i],".txt"))
for(i in 1:length(names)){
dataset[[i]] <- readLines(paste0("../data/nameset/", names[i],".txt"))
}
dataset[[1]]
dataset[[1]][1]
dataset[[1]][2]
View(dataset[[1]])
View(dataset)
for(i in 1:length(names)){
dataset[[i]] [[1]]<-authors[i]
dataset[[i]] [[2]]<- readLines(paste0("../data/nameset/", names[i],".txt"))
}
for(i in 1:length(names)){
dataset[[i]]<-list(3)
dataset[[i]][[1]]<-authors[i]
dataset[[i]][[2]]<- readLines(paste0("../data/nameset/", names[i],".txt"))
dataset[[i]][[3]]<-length(dataset[[i]][[2]])
}
dataset[[1]][[1]]
dataset[[1]][[2]]
dataset[[1]][[3]]
df<-data.frame(length=3)
View(df)
?data.frame
strsplit(dataset[[1]][[2]],split="<>")
strsplit(dataset[[1]][[2]][261],split="<>")
strsplit(dataset[[1]][[2]][264],split="<>")
dataset[[1]][[2]][264]
strsplit(dataset[[1]][[2]][264],split="<>")
strsplit(dataset[[1]][[2]][264],split="<>")
strsplit(dataset[[1]][[2]][265],split="<>")
grep("<>",dataset[[1]][[2]][265])
grepl("<>",dataset[[1]][[2]][265])
?split
?strsplit
x = c("abcde", "ghij", "klmnopq")
strsplit(x, "", fixed=TRUE)
tstrsplit(x, "", fixed=TRUE)
x = c("abcde", "ghij", "klmnopq")
unlist(strsplit(x, "", fixed=TRUE))
x = c("abcde", "ghij", "klmnopq")
rbind(strsplit(x, "", fixed=TRUE))
x = c("abcde", "ghij", "klmnopq")
data.frame(strsplit(x, "", fixed=TRUE))
strsplit(dataset[[1]][[2]][264],split="<>")
str_split("a b c"," ")
?do.call
do.call(rbind,str_split(c("a b c","c d e")," "))
mode(do.call(rbind,str_split(c("a b c","c d e")," ")))
type(do.call(rbind,str_split(c("a b c","c d e")," ")))
typeof(do.call(rbind,str_split(c("a b c","c d e")," ")))
df_form<-function(l){
df<-do.call(rbind,str_split(l[[2]],"<>"))
return(df)
}
df<-llply(dataset,df_form)
library(plyr)
df<-do.call(rbind,str_split(l[[2]],"<>"))
df_form<-function(l){
df<-do.call(rbind,str_split(l[[2]],"<>"))
return(df)
}
df<-llply(dataset,df_form)
df[[1]]
View(df[[1]])
View(l1)
df[[1]][1,]
df[[1]][264,]
View(l1)
df_form<-function(l){
df1<-do.call(rbind,str_split(l[[2]],"<>"))
paper<-df1[,2]
journal<-df1[,3]
quest_author<-rep(l[[1]],l[[3]])
df<-data.frame(quest_author=quest_author,paper=paper,journal=journal)
return(df)
}
df<-llply(dataset,df_form)
View(df[[1]])
View(l1)
df_form<-function(l){
df1<-do.call(rbind,str_split(l[[2]],"<>"))
pattern1<-"[0-9]+_[0-9]+"
ID<-unlist(regmatches(df1[,1], gregexpr(pattern1, df1[,1])))
paper<-df1[,2]
journal<-df1[,3]
quest_author<-rep(l[[1]],l[[3]])
df<-data.frame(id=ID,quest_author=quest_author,paper=paper,journal=journal)
return(df)
}
df<-llply(dataset,df_form)
View(df[[1]])
df_form<-function(l){
df1<-do.call(rbind,str_split(l[[2]],"<>"))
pattern1<-"[0-9]+_[0-9]+"
ID<-unlist(regmatches(df1[,1], gregexpr(pattern1, df1[,1])))
ID<-do.call(rbind,str_split(ID,"_"))
paper<-df1[,2]
journal<-df1[,3]
quest_author<-rep(l[[1]],l[[3]])
df<-data.frame(id=ID,quest_author=quest_author,paper=paper,journal=journal)
return(df)
}
df<-llply(dataset,df_form)
View(df[[1]])
df_form<-function(l){
df1<-do.call(rbind,str_split(l[[2]],"<>"))
pattern1<-"[0-9]+_[0-9]+"
ID<-unlist(regmatches(df1[,1], gregexpr(pattern1, df1[,1])))
ID<-do.call(rbind,str_split(ID,"_"))
paper<-df1[,2]
journal<-df1[,3]
quest_author<-rep(l[[1]],l[[3]])
df<-data.frame(author.id=ID[,1],paper.no<-ID[,2],quest_author=quest_author,paper=paper,journal=journal)
return(df)
}
df<-llply(dataset,df_form)
df[[1]]
View(df[[1]])
df_form<-function(l){
df1<-do.call(rbind,str_split(l[[2]],"<>"))
pattern1<-"[0-9]+_[0-9]+"
pattern2<-"[^A-Z]"
#Author ID and Paper NO.
ID<-unlist(regmatches(df1[,1], gregexpr(pattern1, df1[,1])))
ID<-do.call(rbind,str_split(ID,"_"))
#Title of Paper
paper<-df1[,2]
#Journal
journal<-df1[,3]
#Author name
quest_author<-rep(l[[1]],l[[3]])
#Coauthor
coauthor<-unlist(regmatches(df1[,1], gregexpr(pattern2, df1[,1])))
df<-data.frame(author.id=ID[,1],paper.no=ID[,2],quest_author=quest_author,coauthor=coauthor,paper=paper,journal=journal)
return(df)
}
df<-llply(dataset,df_form)
df_form<-function(l){
df1<-do.call(rbind,str_split(l[[2]],"<>"))
pattern1<-"[0-9]+_[0-9]+"
pattern2<-"[^A-Z]"
#Author ID and Paper NO.
ID<-unlist(regmatches(df1[,1], gregexpr(pattern1, df1[,1])))
ID<-do.call(rbind,str_split(ID,"_"))
#Title of Paper
paper<-df1[,2]
#Journal
journal<-df1[,3]
#Author name
quest_author<-rep(l[[1]],l[[3]])
#Coauthor
coauthor<-unlist(regmatches(df1[,1], regexpr(pattern2, df1[,1])))
df<-data.frame(author.id=ID[,1],paper.no=ID[,2],quest_author=quest_author,coauthor=coauthor,paper=paper,journal=journal)
return(df)
}
df<-llply(dataset,df_form)
View(df[[1]])
regexpr("[^a]", "Alabama")
regmatches("Alabama",regexpr("[^a]", "Alabama"))
l<-dataset[[1]]
df1<-do.call(rbind,str_split(l[[2]],"<>"))
pattern1<-"[0-9]+_[0-9]+"
pattern2<-"[^A-Z]"
ID<-unlist(regmatches(df1[,1], gregexpr(pattern1, df1[,1])))
n<-nchar(ID)
n
df1
View(df1)
coauthor<-unlist(substr(df[,1],start=n+2,stop=nchar(df[,1])))
df[,1]
coauthor<-unlist(substr(df1[,1],start=n+2,stop=nchar(df1[,1])))
n
nchar(df1[,1])
df1[,1]
nchar(df1[,1])
df1[,261]
df1[261,1]
nchar(df1[261,1])
nchar("1","as")
nchar(c("1","as"))
coauthor<-unlist(substr(df1[,1],start=n+2,stop=nchar(as.vector(df1[,1]))))
df1[261,1]
coauthor<-unlist(substr(df1[,1],start=n+2))
n1<-nchar(ID)
coauthor<-sub(paste0(pattern1," "),"",df1[,1])
coauthor
pattern2<-strsplit(l[[1]]," ")
pattern2
pattern2[[1]]
pattern2[[1]][1]
pattern2[[1]][2]
pattern2<-paste0(pattern2[[1]][1],"..",pattern2[[1]][2])
pattern2
coauthor<-sub(pattern2,"",df1[,1])
coauthor
coauthor<-sub(paste0(pattern1," "),"",df1[,1])
coauthor<-sub(pattern2,"",df1[,1])
coauthor
coauthor<-sub(paste0(pattern1," "),"",df1[,1])
coauthor<-sub(pattern2,"",coauthor)
coauthor
pattern2
pattern2<-paste0(pattern2[[1]][1],"[a-z]?[:punc:]",pattern2[[1]][2])
coauthor<-sub(pattern2,"",coauthor)
coauthor
pattern2
pattern2<-paste0(pattern2[[1]][1],"[a-z]?[[:punc:]]",pattern2[[1]][2])
coauthor<-sub(pattern2,"",coauthor)
pattern2<-paste0(pattern2[[1]][1],"[a-z]?[:punct:]",pattern2[[1]][2])
coauthor<-sub(pattern2,"",coauthor)
pattern2
pattern2<-strsplit(l[[1]]," ")
pattern2<-paste0(pattern2[[1]][1],"[a-z]?[:punct:]",pattern2[[1]][2])
coauthor<-sub(pattern2,"",coauthor)
coauthor
coauthor<-sub("A..Gupta","",coauthor)
coaturhoe
coaturhor
coauthor
coauthor<-sub("Gupta","",coauthor)
coauthor
coauthor<-sub(paste0(pattern1," "),"",df1[,1])
coauthor
pattern2
grep(pattern2,coauthor[1])
grep(pattern2,coauthor[2])
grep(pattern2,coauthor[577])
coauthor[577]
grep("A..Gupta",coauthor[577])
grep("A Gupta",coauthor[577])
grep("A[a-z]?\sGupta",coauthor[577])
grep("A[a-z]?[:space:]Gupta",coauthor[577])
grep("A[a-z]?\ Gupta",coauthor[577])
pattern2<-paste0(pattern2[[1]][1],"[a-z]?\ ",pattern2[[1]][2],"[\ ]?;")
coauthor<-sub(pattern2,"",coauthor)
coauthor
grep("A[a-z]?\ Gupta[[\ ]]?",coauthor[577])
grep("A[a-z]?\ Gupta",coauthor[577])
grep("A[a-z]?\ Gupta[:punct:]?",coauthor[577])
grep("A[a-z]?\ Gupta[:punct:]?;",coauthor[577])
pattern2<-paste0(pattern2[[1]][1],"[a-z]?\ ",pattern2[[1]][2],"[:punct:]?;")
coauthor<-sub(pattern2,"",coauthor)
coauthor
pattern2<-paste0(pattern2[[1]][1],"[a-z]?\ ",pattern2[[1]][2],"[:punct:]?;")
grep("A[a-z]?\ Gupta[:punct:]?;",coauthor[577])
grep("A[a-z]?\ Gupta[:punct:]?;",coauthor[577])
pattern2
pattern2<-strsplit(l[[1]]," ")
pattern2<-paste0(pattern2[[1]][1],"[a-z]?\ ",pattern2[[1]][2],"[:punct:]?;")
pattern2
coauthor<-sub(pattern2,"",coauthor)
coauthor
pattern2<-strsplit(l[[1]]," ")
pattern2<-paste0(pattern2[[1]][1],"[a-z]?\ ",pattern2[[1]][2],"[:punct:]?[;]?[:punct:]?")
coauthor<-sub(paste0(pattern1," "),"",df1[,1])
coauthor<-sub(pattern2,"",coauthor)
coauthor
df_form<-function(l){
df1<-do.call(rbind,str_split(l[[2]],"<>"))
pattern1<-"[0-9]+_[0-9]+"
pattern2<-strsplit(l[[1]]," ")
pattern2<-paste0(pattern2[[1]][1],"[a-z]?\ ",pattern2[[1]][2],"[:punct:]?[;]?[:punct:]?")
#Author ID and Paper NO.
ID<-unlist(regmatches(df1[,1], gregexpr(pattern1, df1[,1])))
n1<-nchar(ID)
ID<-do.call(rbind,str_split(ID,"_"))
#Title of Paper
paper<-df1[,2]
#Journal
journal<-df1[,3]
#Author name
quest_author<-rep(l[[1]],l[[3]])
#Coauthor
coauthor<-sub(paste0(pattern1," "),"",df1[,1])
coauthor<-sub(pattern2,"",coauthor)
df<-data.frame(author.id=ID[,1],paper.no=ID[,2],quest_author=quest_author,coauthor=coauthor,paper=paper,journal=journal)
return(df)
}
df<-llply(dataset,df_form)
View(df1)
View(df[[1]])
save(df,file="../output/dataframe.Rdata")
